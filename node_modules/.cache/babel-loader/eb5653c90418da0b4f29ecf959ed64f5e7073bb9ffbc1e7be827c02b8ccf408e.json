{"ast":null,"code":"var _jsxFileName = \"C:\\\\laragon\\\\www\\\\reactjs-article\\\\reactjs\\\\src\\\\components\\\\SavePost.js\",\n  _s = $RefreshSig$();\n// components/SavePost.js\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SavePost() {\n  _s();\n  const [data, setData] = useState([]);\n\n  // Fonction pour charger les données JSON\n  const fetchData = () => {\n    fetch('./json/sauvegarde.json') // Remplacez 'sauvegarde.json' par le chemin vers votre fichier JSON\n    .then(response => response.json()).then(data => {\n      setData(data); // Mettre à jour l'état avec les données chargées\n    }).catch(error => console.error('Erreur lors du chargement des données :', error));\n  };\n\n  // Appeler la fonction fetchData lors du montage du composant\n  useEffect(() => {\n    fetchData();\n  }, []); // Utilisation d'une dépendance vide pour s'assurer que le chargement des données ne se produit qu'une fois\n\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Sauvegarde des publications\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 11\n  }, this);\n}\n_s(SavePost, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = SavePost;\nexport default SavePost;\nvar _c;\n$RefreshReg$(_c, \"SavePost\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SavePost","_s","data","setData","fetchData","fetch","then","response","json","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/laragon/www/reactjs-article/reactjs/src/components/SavePost.js"],"sourcesContent":["// components/SavePost.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nfunction SavePost() {\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  // Fonction pour charger les données JSON\r\n  const fetchData = () => {\r\n    fetch('./json/sauvegarde.json') // Remplacez 'sauvegarde.json' par le chemin vers votre fichier JSON\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setData(data); // Mettre à jour l'état avec les données chargées\r\n      })\r\n      .catch(error => console.error('Erreur lors du chargement des données :', error));\r\n  };\r\n\r\n  // Appeler la fonction fetchData lors du montage du composant\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []); // Utilisation d'une dépendance vide pour s'assurer que le chargement des données ne se produit qu'une fois\r\n\r\n  return (<h2>Sauvegarde des publications</h2>);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default SavePost;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAElB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACA,MAAMQ,SAAS,GAAGA,CAAA,KAAM;IACtBC,KAAK,CAAC,wBAAwB,CAAC,CAAC;IAAA,CAC7BC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACJ,IAAI,IAAI;MACZC,OAAO,CAACD,IAAI,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,CACDO,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC,CAAC;EACpF,CAAC;;EAED;EACAb,SAAS,CAAC,MAAM;IACdO,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBAAQL,OAAA;IAAAa,QAAA,EAAI;EAA2B;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AAC9C;AAACf,EAAA,CApBQD,QAAQ;AAAAiB,EAAA,GAARjB,QAAQ;AA2BjB,eAAeA,QAAQ;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}